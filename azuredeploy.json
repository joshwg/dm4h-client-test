{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "userImageStorageAccountName": {
      "type": "string",
	  "defaultValue": "redpoint",
      "metadata": {
        "description": "The name of the storage account which contains a windows image with RPDM installed"
      }
    },
    "userImageStorageContainerName": {
      "type": "string",
	    "defaultValue": "client-images",
      "metadata": {
        "description": "The container name in the storage account with contains a windows image with RPDM installed"
      }
    },
    "userImageVhdName": {
      "type": "string",
	  "defaultValue": "rpdm-osDisk.05186ce6-de9a-4883-b887-b8147d79c64f.vhd",
      "metadata": {
        "description": "This is the path of the windows image"
      }
    },
	"vmStorageAccountName": {
      "type": "string",
	  "defaultValue": "jwgtest",
      "metadata": {
        "description": "The name of the storage account which contains a windows image with RPDM installed"
	  }
	},
	"vmName": {
	  "type": "string",
	  "defaultValue": "dm4hclient",
	  "metadata": {
         "description": "The name of the vm we are going to create"
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
	  "defaultValue": "dm4h-client",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "adminUserName": {
      "type": "string",
  	  "defaultValue": "dm4h",
      "metadata": {
        "description": "UserName for the Virtual Machine. Must not be admin."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
	  "defaultValue": "Standard_A3",
      "allowedValues": [
          "Standard_A1",
          "Standard_A2",
          "Standard_A3",
          "Standard_A4",
          "Standard_D1",
          "Standard_D2",
          "Standard_D3",
          "Standard_D4"
      ],
      "metadata": {
        "description": "This is the size of your VM. There are other sizes than those listed here."
      }
    }
  },
  "variables": {
	"osType": "windows",
    "location": "[resourceGroup().location]",
    "publicIPAddressName": "dm4h-ip",

    "virtualNetworkName": "dm4hVNET",
    "nicName": "dm4hVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "userImageName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/',parameters('userImageStorageContainerName'),'/',parameters('userImageVhdName'))]",
    "osDiskVhdName": "[concat('http://',parameters('vmStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'-osDisk.vhd')]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat('dns-', parameters('dnsNameForPublicIP'))]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('vmName'),'-osDisk')]",
            "osType": "[parameters('osType')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[variables('userImageName')]"
            },
            "vhd": {
              "uri": "[variables('osDiskVhdName')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
             "enabled": "true",
             "storageUri": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ],
}
